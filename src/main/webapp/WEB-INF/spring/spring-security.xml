<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	
	<!-- 비밀번호 인코더 -->
    <beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />  

	 <!-- 검사 URL -->
    <http auto-config="true" use-expressions="true">    
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/mypage/**" access="hasRole('USER')" />
        <intercept-url pattern="/login/**" access="isAnonymous()" />
        <intercept-url pattern="/buy/**" access="hasAnyRole('USER, ADMIN')" />     
        <intercept-url pattern="/cart/**" access="hasAnyRole('USER, ADMIN')" />
        <intercept-url pattern="/chat/**" access="hasAnyRole('USER, ADMIN')" />      
        <intercept-url pattern="/resources/**" access="hasRole('ADMIN')" /> 
        <intercept-url pattern="/**" access="permitAll" />
        
   
        <!-- 
        	순서도 중요하다 
        	위에서부터 실행되기때문에 위에서 admin이나 user를 주고 마지막에 나머지 는 permitAll 주는식으로 해야함     	
         -->
        
        <!-- 
        	로그인페이지를 만든거를 적용한다.
        	
        	login-page="/login/loginForm" 
        	->로그인 인증을 처리할 주소는 /login/loginForm 이다.
       	
        	default-target-url="/"
        	->로그인이 완료되면 이동할 주소, 루트로 이동
        	
        	authentication-failure-url="/login/loginForm?error"
        	->인증 실패시 get방식으로  loginForm으로 이동
        	
        	username-parameter="id"
        	->로그인 폼에 아이디 입력 필드에 사용될 name 기본값 "username"  loginform에서 넘어오는값과 맞춰줘야함
           
            password-parameter="password"
            -> 로그인 폼에 패스워드 입력 필드에 사용될 name 기본값 "password" loginform에서 넘어오는값과 맞춰줘야함
         -->
        
        <form-login login-page="/login"
                    default-target-url="/"
                    authentication-failure-url="/login?error"
                    username-parameter="m_id"
                    password-parameter="m_password" />
        
         <logout logout-url="/logout"
                logout-success-url="/" /> 
                
        <access-denied-handler error-page="/AccessDenine" /> 
        
        <session-management>
        	<!-- 동일 ID의 세션 최대수가 한 개, 그 이상일 경우는 기존 세션 무효화 -->
        	<concurrency-control max-sessions="1" expired-url="/"/>
	    </session-management>	
    
    </http>    
    
     <beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean> 
    
    <!-- JONES 7566 -->
    <!-- 기존에 작성된 데이터 베이스를 연동 방식
    	users-by-username-query를 통해 ID에 따른 비번 일치여부를 확인
    	authorities-by-username-query에서 로그인에 성공한 사용자의 권한을 확인
    	위의 두쿼리를 활용하는 형태임
    	예)Scott의 emp테이블을 활용한 예 username = ename password = empno
    	
    	users-by-username-query="select username, password, enabled from users where username = ?"를
    	users-by-username-query="select ename, empno, 1  from emp where ename = ?" 이렇게 바꿈
    	
    	authorities-by-username-query="select username, authority from authorities where username = ?"를
    	authorities-by-username-query="select ename,case when job='MANAGER' then 'ROLE_ADMIN' else  'ROLE_USER' end authority from emp where ename=?"이렇게 바꿈
     	case when job이 매니저이면 then 'ROLE_ADMIN' 아니라면  'ROLE_USER'
     -->
    <!--  provider  -->
      <authentication-manager>
      	
        <authentication-provider>
        	<password-encoder hash="bcrypt" /> <!-- 비밀번호 암호화된거 비교하는것-->
	        <jdbc-user-service 
	            data-source-ref="dataSource"
	            role-prefix=""    
				users-by-username-query="select m_id, m_password , m_enabled  from member where m_id = ?"
	  			authorities-by-username-query="select m_id,case when m_authority ='관리자' then 'ROLE_ADMIN' else 'ROLE_USER' end authority from member where m_id = ?"            
	        />
	    </authentication-provider>
    </authentication-manager> 

<!--<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"/>
		</authentication-provider>
	</authentication-manager> -->
	
	<context:component-scan base-package="edu.bit.ssmall.security"/>

	

   
</beans:beans>