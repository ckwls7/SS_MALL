<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/"/>
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/fonts/**" location="/resources/fonts/" />
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/productimage/**" location="/resources/productimage/" />
	<resources mapping="/login/**" location="/resources/login/" />
	<resources mapping="/vendor/**" location="/resources/vendor/" /> 
	<!-- <resources mapping="/**" location="/resources/" /> -->


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="edu.bit.ssmall" />

	<!-- 네이버 -->
	<beans:bean id="naverClientID" class="java.lang.String">
        <beans:constructor-arg value="a_M4hmmR_3Zb31fTTH8P" />
	</beans:bean>
	
	<beans:bean id="naverClientSecret" class="java.lang.String">
	    <beans:constructor-arg value="045Ev3gTPS" />
	</beans:bean>

	
	<beans:bean id="naverRedirectUrl" class="java.lang.String">
	    <beans:constructor-arg value="http://localhost:8282/ssmall/naver/callback" />
	</beans:bean>
    
	<beans:bean id="naverSns" class="edu.bit.ssmall.oauth.SnsValue">
		<beans:constructor-arg value="naver" />
	    <beans:constructor-arg ref="naverClientID" />
	    <beans:constructor-arg ref="naverClientSecret" />
	    <beans:constructor-arg ref="naverRedirectUrl" />
	</beans:bean>

	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	
	<!-- <beans:bean id="echoHandler" class="edu.bit.ssmall.chat.EchoHandler"/>
	<websocket:handlers>	
	    <websocket:mapping handler="echoHandler" path="/echo" />	
	    <websocket:sockjs />	
	</websocket:handlers>  -->
	

	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="transactionTest" rollback-for="Exception" />
		</tx:attributes>    
	</tx:advice> -->
	
	<!-- Transaction을 위한 AOP 설정 -->
	<!-- <aop:config>
		<aop:pointcut id="servicePublicMethod" expression="execution(* edu..service.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePublicMethod" />
	</aop:config>   -->


</beans:beans>
